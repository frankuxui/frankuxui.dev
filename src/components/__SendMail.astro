---
import { actions, isInputError } from "astro:actions";

export const prerender = false;

const result = Astro.getActionResult(actions.send);

let message = "Enviando mensaje...";
if (result?.error) {
  if (isInputError(result.error)) {
    message = "Por favor, completa todos los campos correctamente.";
  } else {
    message = "Ocurrió un error al enviar el mensaje. Inténtalo de nuevo más tarde.";
  }
} else if (result?.data) {
  message = "Mensaje enviado exitosamente.";
}

if (result?.data) {
  console.log("Mensaje enviado exitosamente:", result.data);
}

const inputErrors = isInputError(result?.error) ? result.error.fields : {};
---

<form action={actions.send} method="post" class="relative" id="fmhx438f934xj43dd__">
  <div class="grid gap-6">
    <div class="grid gap-4">
      <label html-for="name" class="font-medium text-lg">Nombre</label>
      <input
        type="text"
        id="name"
        name="name"
        placeholder="Nombre"
        class="h-20 px-6 rounded-lg text-base font-roboto-mono placeholder:text-sm placeholder:font-normal font-medium outline-none ring-0 ring-transparent motion-safe:transition-colors motion-safe:duration-300 border-3 border-transparent focus:border-foreground bg-foreground/5 hover:bg-foreground/8 focus:bg-white dark:focus:placeholder:text-background/50 dark:focus:text-black"
        required
        aria-describedby={inputErrors.name ? "name-error" : undefined}
      />
    </div>
    <div class="grid gap-4">
      <label html-for="email" class="font-medium text-lg">Correo</label>
      <input
        type="text"
        id="email"
        name="email"
        placeholder="Correo electrónico"
        class="h-20 px-6 rounded-lg text-base font-roboto-mono placeholder:text-sm placeholder:font-normal font-medium outline-none ring-0 ring-transparent motion-safe:transition-colors motion-safe:duration-300 border-3 border-transparent focus:border-foreground bg-foreground/5 hover:bg-foreground/8 focus:bg-white dark:focus:placeholder:text-background/50 dark:focus:text-black"
        required
        aria-describedby={inputErrors.email ? "email-error" : undefined}
      />
    </div>
    <div class="grid gap-4">
      <label html-for="message" class="font-medium text-lg">Mensaje</label>
      <textarea
        id="message"
        name="message"
        placeholder="Deja tu mensaje"
        rows={4}
        cols={30}
        class="resize-none px-6 py-4 rounded-lg text-base font-roboto-mono placeholder:text-sm placeholder:font-normal font-medium outline-none ring-0 ring-transparent motion-safe:transition-colors motion-safe:duration-300 border-3 border-transparent focus:border-foreground bg-foreground/5 hover:bg-foreground/8 focus:bg-white dark:focus:placeholder:text-background/50 dark:focus:text-black"
        required></textarea>
    </div>
    <div class="grid gap-3">
      <button
        type="submit"
        class="inline-flex items-center justify-center rounded-full uppercase font-roboto-mono font-medium border-2 border-transparent cursor-pointer disabled:pointer-events-none motion-safe:transition-colors motion-safe:duration-500 bg-primary text-primary-foreground hover:bg-primary-hover h-16 px-8 sm:px-10 text-sm sm:text-base"
      >
        Envíame un mensaje
      </button>
    </div>
    {result ? <div class={`text-base font-medium ${result.error ? "text-red-500" : "text-green-500"}`}>{message}</div> : null}
  </div>
</form>

<script>
  import { actions } from "astro:actions";

  const form = document.getElementById("fmhx438f934xj43dd__") as HTMLFormElement;
  const container = document.getElementById("form-container") as HTMLDivElement;

  form.addEventListener("submit", async (event) => {
    event.preventDefault();

    const button = form.querySelector("button[type='submit']") as HTMLButtonElement;
    button.disabled = true;
    button.classList.add("cursor-not-allowed", "opacity-50");
    button.textContent = "Enviando mensaje...";

    const formData = new FormData(form);
    const result = await actions.send(formData);

    if (result?.data) {
      container.innerHTML = `
        <div class="flex flex-col items-center justify-center gap-4 mt-10">
          <svg width="115" height="115" viewBox="0 0 133 133" xmlns="http://www.w3.org/2000/svg">
            <g fill="none" fill-rule="evenodd">
              <circle fill="#07b481" cx="66.5" cy="66.5" r="54.5"></circle>
              <circle fill="#FFFFFF" cx="66.5" cy="66.5" r="55.5"></circle>
              <circle stroke="#07b481" stroke-width="4" cx="66.5" cy="66.5" r="54.5"></circle>
              <polyline stroke="#FFFFFF" stroke-width="5.5" points="41 70 56 85 92 49"></polyline>
            </g>
          </svg>
          <p class="text-green-600 font-medium text-lg">Mensaje enviado exitosamente.</p>
        </div>
      `;
    } else {
      alert("Ocurrió un error al enviar el mensaje.");
      button.disabled = false;
      button.classList.remove("cursor-not-allowed", "opacity-50");
      button.textContent = "Envíame un mensaje";
    }
  });
</script>
