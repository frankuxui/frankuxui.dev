<button
  aria-label="Switch theme"
  data-toggle="theme"
  class="group rounded-full w-12 h-12 inline-flex items-center justify-center overflow-hidden backdrop-blur-md hover:bg-foreground/5 focus:bg-foreground/10"
>
  <span class="sr-only">Switch theme</span>
  <div class="relative h-8 w-8">
    <div data-theme-icon="dark" class="theme-icon">
      <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 24 24"
        ><g fill="none" stroke="currentColor" stroke-width="1.5"
          ><path d="M20.434 13.934a6.5 6.5 0 0 1-7.367-7.367A6.501 6.501 0 0 0 14 19.5a6.5 6.5 0 0 0 6.433-5.566Z"></path><path
            stroke-linecap="round"
            d="M4.5 8.75v1.5m.75-.75h-1.5m3.75-6v2m1-1h-2"></path></g
        ></svg
      >
    </div>
    <div data-theme-icon="light" class="theme-icon">
      <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 24 24" class="icon-sun"
        ><path fill="currentColor" d="M12 1.25a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-1.5 0V2a.75.75 0 0 1 .75-.75"></path><path
          fill="currentColor"
          fill-rule="evenodd"
          d="M6.25 12a5.75 5.75 0 1 1 11.5 0a5.75 5.75 0 0 1-11.5 0M12 7.75a4.25 4.25 0 1 0 0 8.5a4.25 4.25 0 0 0 0-8.5"
          clip-rule="evenodd"></path><path
          fill="currentColor"
          d="M5.46 4.399a.75.75 0 0 0-1.061 1.06l.707.707a.75.75 0 1 0 1.06-1.06zM22.75 12a.75.75 0 0 1-.75.75h-1a.75.75 0 0 1 0-1.5h1a.75.75 0 0 1 .75.75m-3.149-6.54a.75.75 0 1 0-1.06-1.061l-.707.707a.75.75 0 1 0 1.06 1.06zM12 20.25a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-1.5 0v-1a.75.75 0 0 1 .75-.75m6.894-2.416a.75.75 0 1 0-1.06 1.06l.707.707a.75.75 0 1 0 1.06-1.06zM3.75 12a.75.75 0 0 1-.75.75H2a.75.75 0 0 1 0-1.5h1a.75.75 0 0 1 .75.75m2.416 6.894a.75.75 0 0 0-1.06-1.06l-.707.707a.75.75 0 0 0 1.06 1.06z"
        ></path></svg
      >
    </div>
    <div data-theme-icon="system" class="theme-icon">
      <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 24 24" class="icon-system"
        ><path
          fill="currentColor"
          d="M6.25 4A2.25 2.25 0 0 0 4 6.25v7.5A2.25 2.25 0 0 0 6.25 16h11.5A2.25 2.25 0 0 0 20 13.75v-7.5A2.25 2.25 0 0 0 17.75 4zM5.5 6.25a.75.75 0 0 1 .75-.75h11.5a.75.75 0 0 1 .75.75v7.5a.75.75 0 0 1-.75.75H6.25a.75.75 0 0 1-.75-.75zM2.75 17.5a.75.75 0 0 0 0 1.5h18.5a.75.75 0 0 0 0-1.5z"
        ></path></svg
      >
    </div>
  </div>
</button>

<style>
  .theme-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    inset: 0;
    transform-origin: 50% 100px;
    transition:
      transform 0.7s,
      top 0.7s;
  }
  .rotate-0 {
    transform: rotate(0deg);
  }
  .rotate-90 {
    transform: rotate(90deg);
  }
  .-rotate-90 {
    transform: rotate(-90deg);
  }
  .top-0 {
    top: 0;
  }
  .top-24 {
    top: 6rem;
  }
</style>

<script>
  type ThemeType = "dark" | "light" | "system";

  function initTheme() {
    const toggleBtn = document.querySelector('[data-toggle="theme"]') as HTMLButtonElement;

    const darkIcon = toggleBtn.querySelector('[data-theme-icon="dark"]') as HTMLElement;
    const lightIcon = toggleBtn.querySelector('[data-theme-icon="light"]') as HTMLElement;
    const systemIcon = toggleBtn.querySelector('[data-theme-icon="system"]') as HTMLElement;

    const icons = { dark: darkIcon, light: lightIcon, system: systemIcon };

    const theme: {
      getTheme: () => ThemeType;
      setTheme: (t: ThemeType) => void;
    } = window.theme || {
      getTheme: () => "system",
      setTheme: (t) => {
        document.documentElement.dataset.theme = t;
        document.documentElement.classList.toggle("dark", t === "dark");
      },
    };

    const clearClasses = () => {
      Object.values(icons).forEach((icon) => {
        icon.classList.remove("rotate-0", "rotate-90", "-rotate-90", "top-0", "top-24");
      });
    };

    const applyIconState = (mode: ThemeType) => {
      clearClasses();

      if (mode === "dark") {
        icons.dark.classList.add("rotate-0");
        icons.light.classList.add("-rotate-90");
        icons.system.classList.add("top-24");
      } else if (mode === "light") {
        icons.dark.classList.add("rotate-90");
        icons.light.classList.add("rotate-0");
        icons.system.classList.add("top-24");
      } else {
        icons.dark.classList.add("rotate-90");
        icons.light.classList.add("-rotate-90");
        icons.system.classList.add("top-0");
      }
    };

    const cycleTheme = () => {
      const current = theme.getTheme();
      const next: ThemeType = current === "dark" ? "light" : current === "light" ? "system" : "dark";

      theme.setTheme(next);
      applyIconState(next);

      document.dispatchEvent(new CustomEvent("theme-changed", { detail: { theme: next } }));
    };

    toggleBtn.addEventListener("click", cycleTheme);

    document.addEventListener("DOMContentLoaded", () => {
      applyIconState(theme.getTheme());
    });

    // Init on first load
    applyIconState(theme.getTheme());
  }

  document.addEventListener("DOMContentLoaded", initTheme);
</script>
