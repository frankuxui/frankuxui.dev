---
import type { CollectionEntry } from "astro:content";
import Root from "./Root.astro";
import { getPostTags } from "@/utils/getPosts";
import moment from "moment";
import { siteConfig } from "@/config";
import type { Post } from "@/types/Post";
moment.locale("es");

type Props = CollectionEntry<"blog">["data"];

const { title, description, date, tags, subtitle, id, cover, slug } = Astro.props as Post & Props;

const allTags = await getPostTags().then((tags) => {
  return tags.map((tag) => ({
    name: tag.name,
    slug: tag.slug,
  }));
});
const filterTags = allTags.filter((tag) => tags?.includes(tag.slug as string));

// JSon-LD metadata for the post
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  author: {
    "@type": "Person",
    name: siteConfig.alternateName,
    url: siteConfig.siteUrl,
  },
  headline: title,
  description: description,
  datePublished: date,
  dateModified: date,
  keywords: tags?.join(", "),
  image: siteConfig.siteUrl + (cover?.src || siteConfig.openGraph.image),
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": new URL(Astro.url.pathname, Astro.site).toString(),
  },
  publisher: {
    "@type": "Organization",
    name: siteConfig.alternateName,
    logo: {
      "@type": "ImageObject",
      url: siteConfig.logo,
    },
  },
};
---

<Root title={title} description={description}>
  {jsonLd && <script is:inline type="application/ld+json" set:html={JSON.stringify(jsonLd)} />}

  <main class="w-full py-20" itemtype="https://schema.org/BlogPosting" itemscope>
    <header class="mx-auto px-10 sm:px-14 md:max-w-5xl" itemprop="headline">
      <div>
        <a href="/blog" class="text-sm font-medium text-foreground" aria-label="Volver al blog">← Volver a la lista de posts</a>
        <div class="grid gap-2 mt-10">
          <p class="text-sm text-foreground/70">Post</p>
          <h1 class="text-3xl leading-12 md:text-4xl font-medium" itemprop="name">
            {title}
          </h1>
          <p class="mt-4 leading-9 text-2xl w-full max-w-4xl" itemprop="description">{description}</p>
          <p class="text-sm text-foreground/50" itemprop="datePublished">
            Artículo creado el {moment(date).format("DD [de] MMMM [de] YYYY")}
          </p>
        </div>
      </div>
    </header>

    <section class="w-full max-w-5xl mx-auto mt-10">
      <figure itemprop="image" itemscope itemtype="https://schema.org/ImageObject">
        <img
          src={cover?.src}
          alt={cover?.alt || `Imagen destacada del post: ${title}`}
          data-author={cover?.author}
          data-author-name={cover?.authorName}
          title={cover?.alt || title}
          class="w-full min-w-0 sm:rounded-2xl"
          itemprop="url"
        />
        {
          cover?.authorName && (
            <figcaption class="text-sm text-foreground/50 mt-2">
              Imagen por{" "}
              <a href={cover.author} target="_blank" rel="noopener noreferrer">
                {cover.authorName}
              </a>
            </figcaption>
          )
        }
      </figure>
    </section>

    <nav aria-label="Etiquetas del post" class="w-full max-w-5xl px-10 mx-auto mt-10">
      <ul class="flex items-center gap-2 flex-wrap">
        {
          filterTags?.map((tag) => (
            <li>
              <a
                href={`/blog?q=${tag.slug}`}
                aria-label={`Ver posts etiquetados con ${tag.name}`}
                class="h-10 text-sm font-medium px-6 inline-flex items-center justify-center rounded-full motion-safe:transition-colors bg-foreground/5 hover:bg-foreground/12"
                itemprop="keywords"
              >
                {tag.name}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>

    <section class="w-full">
      <article class="w-full max-w-5xl px-10 mx-auto mt-10 pb-20 prose lg:prose-lg dark:prose-invert" itemprop="articleBody">
        <slot />
      </article>
    </section>
  </main>
</Root>
